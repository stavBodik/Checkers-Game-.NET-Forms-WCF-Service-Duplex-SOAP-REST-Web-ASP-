//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_RESTORED_GAME", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_RESTORED_GAME : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> gameStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceRef.DTO_MOVEMENT[] movementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceRef.DTO_Player[] playersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> gameStatus {
            get {
                return this.gameStatusField;
            }
            set {
                if ((this.gameStatusField.Equals(value) != true)) {
                    this.gameStatusField = value;
                    this.RaisePropertyChanged("gameStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceRef.DTO_MOVEMENT[] movements {
            get {
                return this.movementsField;
            }
            set {
                if ((object.ReferenceEquals(this.movementsField, value) != true)) {
                    this.movementsField = value;
                    this.RaisePropertyChanged("movements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceRef.DTO_Player[] players {
            get {
                return this.playersField;
            }
            set {
                if ((object.ReferenceEquals(this.playersField, value) != true)) {
                    this.playersField = value;
                    this.RaisePropertyChanged("players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_MOVEMENT", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_MOVEMENT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Checker_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Game_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Checker_ID {
            get {
                return this.Checker_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Checker_IDField, value) != true)) {
                    this.Checker_IDField = value;
                    this.RaisePropertyChanged("Checker_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Col {
            get {
                return this.ColField;
            }
            set {
                if ((this.ColField.Equals(value) != true)) {
                    this.ColField = value;
                    this.RaisePropertyChanged("Col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Game_ID {
            get {
                return this.Game_IDField;
            }
            set {
                if ((this.Game_IDField.Equals(value) != true)) {
                    this.Game_IDField = value;
                    this.RaisePropertyChanged("Game_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Player", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TEAM_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountEmail {
            get {
                return this.AccountEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountEmailField, value) != true)) {
                    this.AccountEmailField = value;
                    this.RaisePropertyChanged("AccountEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TEAM_NAME {
            get {
                return this.TEAM_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.TEAM_NAMEField, value) != true)) {
                    this.TEAM_NAMEField = value;
                    this.RaisePropertyChanged("TEAM_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                if ((this.isDeletedField.Equals(value) != true)) {
                    this.isDeletedField = value;
                    this.RaisePropertyChanged("isDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Checker", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_Checker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int checkerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point oldPositionOnBordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int checkerType {
            get {
                return this.checkerTypeField;
            }
            set {
                if ((this.checkerTypeField.Equals(value) != true)) {
                    this.checkerTypeField = value;
                    this.RaisePropertyChanged("checkerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point oldPositionOnBord {
            get {
                return this.oldPositionOnBordField;
            }
            set {
                if ((this.oldPositionOnBordField.Equals(value) != true)) {
                    this.oldPositionOnBordField = value;
                    this.RaisePropertyChanged("oldPositionOnBord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_ACCOUNT", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_ACCOUNT : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMAILField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PASSWORDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceRef.DTO_Player[] playersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMAIL {
            get {
                return this.EMAILField;
            }
            set {
                if ((object.ReferenceEquals(this.EMAILField, value) != true)) {
                    this.EMAILField = value;
                    this.RaisePropertyChanged("EMAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PASSWORD {
            get {
                return this.PASSWORDField;
            }
            set {
                if ((object.ReferenceEquals(this.PASSWORDField, value) != true)) {
                    this.PASSWORDField = value;
                    this.RaisePropertyChanged("PASSWORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceRef.DTO_Player[] players {
            get {
                return this.playersField;
            }
            set {
                if ((object.ReferenceEquals(this.playersField, value) != true)) {
                    this.playersField = value;
                    this.RaisePropertyChanged("players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_GamePlay", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_GamePlay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostPlayerAccountEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int hostPlayerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostPlayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string joinPlayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> joinedPlayerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                if ((this.createDateField.Equals(value) != true)) {
                    this.createDateField = value;
                    this.RaisePropertyChanged("createDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gameName {
            get {
                return this.gameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.gameNameField, value) != true)) {
                    this.gameNameField = value;
                    this.RaisePropertyChanged("gameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostPlayerAccountEmail {
            get {
                return this.hostPlayerAccountEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.hostPlayerAccountEmailField, value) != true)) {
                    this.hostPlayerAccountEmailField = value;
                    this.RaisePropertyChanged("hostPlayerAccountEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int hostPlayerID {
            get {
                return this.hostPlayerIDField;
            }
            set {
                if ((this.hostPlayerIDField.Equals(value) != true)) {
                    this.hostPlayerIDField = value;
                    this.RaisePropertyChanged("hostPlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostPlayerName {
            get {
                return this.hostPlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.hostPlayerNameField, value) != true)) {
                    this.hostPlayerNameField = value;
                    this.RaisePropertyChanged("hostPlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string joinPlayerName {
            get {
                return this.joinPlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.joinPlayerNameField, value) != true)) {
                    this.joinPlayerNameField = value;
                    this.RaisePropertyChanged("joinPlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> joinedPlayerID {
            get {
                return this.joinedPlayerIDField;
            }
            set {
                if ((this.joinedPlayerIDField.Equals(value) != true)) {
                    this.joinedPlayerIDField = value;
                    this.RaisePropertyChanged("joinedPlayerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_PLAYER_GAMES", Namespace="http://schemas.datacontract.org/2004/07/WcfService.App_Code")]
    [System.SerializableAttribute()]
    public partial class DTO_PLAYER_GAMES : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Games {
            get {
                return this.GamesField;
            }
            set {
                if ((this.GamesField.Equals(value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.IDuplexService", CallbackContract=typeof(Client.ServiceRef.IDuplexServiceCallback))]
    public interface IDuplexService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateGameStatus")]
        void UpdateGameStatus(int gameID, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetRestoredGame", ReplyAction="http://tempuri.org/IDuplexService/GetRestoredGameResponse")]
        Client.ServiceRef.DTO_RESTORED_GAME GetRestoredGame(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateServerWithCheckerMove")]
        void UpdateServerWithCheckerMove(int gameID, Client.ServiceRef.DTO_Player Player, Client.ServiceRef.DTO_Checker obj, string eatenCheckerID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/RegisterClient")]
        void RegisterClient(int gameID, Client.ServiceRef.DTO_Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/FindGameAndReturnPlayerInfo", ReplyAction="http://tempuri.org/IDuplexService/FindGameAndReturnPlayerInfoResponse")]
        Client.ServiceRef.DTO_Player FindGameAndReturnPlayerInfo(int gameID, string accountEmail);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UnregisterClient")]
        void UnregisterClient(int gameID, Client.ServiceRef.DTO_Player player, bool isGameOver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/NotifyReadyToPlay")]
        void NotifyReadyToPlay(int gameID, Client.ServiceRef.DTO_Player player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateServerPlayerWon")]
        void UpdateServerPlayerWon(int gameID, Client.ServiceRef.DTO_Player wonPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/ClientLogin", ReplyAction="http://tempuri.org/IDuplexService/ClientLoginResponse")]
        Client.ServiceRef.DTO_ACCOUNT ClientLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/ClientGetPlayers", ReplyAction="http://tempuri.org/IDuplexService/ClientGetPlayersResponse")]
        Client.ServiceRef.DTO_Player[] ClientGetPlayers(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/ClientAddGame", ReplyAction="http://tempuri.org/IDuplexService/ClientAddGameResponse")]
        int ClientAddGame(Client.ServiceRef.DTO_GamePlay game);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuplexServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateClientWithGameWinner")]
        void UpdateClientWithGameWinner(Client.ServiceRef.DTO_Player wonPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateClientWithCheckerMove")]
        void UpdateClientWithCheckerMove(Client.ServiceRef.DTO_Checker checker);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateClientRemoveEatenChecker")]
        void UpdateClientRemoveEatenChecker(string eatenCheckerID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/UpdateClientGameStartOk")]
        void UpdateClientGameStartOk(Client.ServiceRef.DTO_Player whiteCheckersPlayer, Client.ServiceRef.DTO_Player blackCheckersPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/CheckClientReady")]
        void CheckClientReady();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/NotifyClientOpponentDisconnected")]
        void NotifyClientOpponentDisconnected();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/isConnected")]
        void isConnected();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/NotifyRegistarClientStatus")]
        void NotifyRegistarClientStatus(bool isRegisterSucceed);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuplexServiceChannel : Client.ServiceRef.IDuplexService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DuplexServiceClient : System.ServiceModel.DuplexClientBase<Client.ServiceRef.IDuplexService>, Client.ServiceRef.IDuplexService {
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void UpdateGameStatus(int gameID, int status) {
            base.Channel.UpdateGameStatus(gameID, status);
        }
        
        public Client.ServiceRef.DTO_RESTORED_GAME GetRestoredGame(int gameID) {
            return base.Channel.GetRestoredGame(gameID);
        }
        
        public void UpdateServerWithCheckerMove(int gameID, Client.ServiceRef.DTO_Player Player, Client.ServiceRef.DTO_Checker obj, string eatenCheckerID) {
            base.Channel.UpdateServerWithCheckerMove(gameID, Player, obj, eatenCheckerID);
        }
        
        public void RegisterClient(int gameID, Client.ServiceRef.DTO_Player player) {
            base.Channel.RegisterClient(gameID, player);
        }
        
        public Client.ServiceRef.DTO_Player FindGameAndReturnPlayerInfo(int gameID, string accountEmail) {
            return base.Channel.FindGameAndReturnPlayerInfo(gameID, accountEmail);
        }
        
        public void UnregisterClient(int gameID, Client.ServiceRef.DTO_Player player, bool isGameOver) {
            base.Channel.UnregisterClient(gameID, player, isGameOver);
        }
        
        public void NotifyReadyToPlay(int gameID, Client.ServiceRef.DTO_Player player) {
            base.Channel.NotifyReadyToPlay(gameID, player);
        }
        
        public void UpdateServerPlayerWon(int gameID, Client.ServiceRef.DTO_Player wonPlayer) {
            base.Channel.UpdateServerPlayerWon(gameID, wonPlayer);
        }
        
        public Client.ServiceRef.DTO_ACCOUNT ClientLogin(string email, string password) {
            return base.Channel.ClientLogin(email, password);
        }
        
        public Client.ServiceRef.DTO_Player[] ClientGetPlayers(string email) {
            return base.Channel.ClientGetPlayers(email);
        }
        
        public int ClientAddGame(Client.ServiceRef.DTO_GamePlay game) {
            return base.Channel.ClientAddGame(game);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.IWebService")]
    public interface IWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/IsEmailExist", ReplyAction="http://tempuri.org/IWebService/IsEmailExistResponse")]
        bool IsEmailExist(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/RegisterAccount", ReplyAction="http://tempuri.org/IWebService/RegisterAccountResponse")]
        void RegisterAccount(Client.ServiceRef.DTO_ACCOUNT account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/UpdateAccount", ReplyAction="http://tempuri.org/IWebService/UpdateAccountResponse")]
        void UpdateAccount(Client.ServiceRef.DTO_ACCOUNT account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/WebLogin", ReplyAction="http://tempuri.org/IWebService/WebLoginResponse")]
        Client.ServiceRef.DTO_ACCOUNT WebLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/WebGetPlayers", ReplyAction="http://tempuri.org/IWebService/WebGetPlayersResponse")]
        Client.ServiceRef.DTO_Player[] WebGetPlayers(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/WebAddGame", ReplyAction="http://tempuri.org/IWebService/WebAddGameResponse")]
        int WebAddGame(Client.ServiceRef.DTO_GamePlay game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/ExistGame", ReplyAction="http://tempuri.org/IWebService/ExistGameResponse")]
        void ExistGame(int gameID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetWatingGames", ReplyAction="http://tempuri.org/IWebService/GetWatingGamesResponse")]
        Client.ServiceRef.DTO_GamePlay[] GetWatingGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/JoinGame", ReplyAction="http://tempuri.org/IWebService/JoinGameResponse")]
        int JoinGame(string hostPlayerID, string joiningPlayerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetAllPlayers", ReplyAction="http://tempuri.org/IWebService/GetAllPlayersResponse")]
        Client.ServiceRef.DTO_Player[] GetAllPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetAllGames", ReplyAction="http://tempuri.org/IWebService/GetAllGamesResponse")]
        Client.ServiceRef.DTO_GamePlay[] GetAllGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetGamesByPlayerID", ReplyAction="http://tempuri.org/IWebService/GetGamesByPlayerIDResponse")]
        Client.ServiceRef.DTO_GamePlay[] GetGamesByPlayerID(string playerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetPlayersByGameID", ReplyAction="http://tempuri.org/IWebService/GetPlayersByGameIDResponse")]
        Client.ServiceRef.DTO_Player[] GetPlayersByGameID(string gmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetForEachPlayerNGames", ReplyAction="http://tempuri.org/IWebService/GetForEachPlayerNGamesResponse")]
        Client.ServiceRef.DTO_PLAYER_GAMES[] GetForEachPlayerNGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/GetAllGamesByAccountEmail", ReplyAction="http://tempuri.org/IWebService/GetAllGamesByAccountEmailResponse")]
        Client.ServiceRef.DTO_GamePlay[] GetAllGamesByAccountEmail(string accountEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/RemovePlayers", ReplyAction="http://tempuri.org/IWebService/RemovePlayersResponse")]
        void RemovePlayers(int[] playersID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebService/RemoveGames", ReplyAction="http://tempuri.org/IWebService/RemoveGamesResponse")]
        void RemoveGames(int[] gamesID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebServiceChannel : Client.ServiceRef.IWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceClient : System.ServiceModel.ClientBase<Client.ServiceRef.IWebService>, Client.ServiceRef.IWebService {
        
        public WebServiceClient() {
        }
        
        public WebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsEmailExist(string email) {
            return base.Channel.IsEmailExist(email);
        }
        
        public void RegisterAccount(Client.ServiceRef.DTO_ACCOUNT account) {
            base.Channel.RegisterAccount(account);
        }
        
        public void UpdateAccount(Client.ServiceRef.DTO_ACCOUNT account) {
            base.Channel.UpdateAccount(account);
        }
        
        public Client.ServiceRef.DTO_ACCOUNT WebLogin(string email, string password) {
            return base.Channel.WebLogin(email, password);
        }
        
        public Client.ServiceRef.DTO_Player[] WebGetPlayers(string email) {
            return base.Channel.WebGetPlayers(email);
        }
        
        public int WebAddGame(Client.ServiceRef.DTO_GamePlay game) {
            return base.Channel.WebAddGame(game);
        }
        
        public void ExistGame(int gameID) {
            base.Channel.ExistGame(gameID);
        }
        
        public Client.ServiceRef.DTO_GamePlay[] GetWatingGames() {
            return base.Channel.GetWatingGames();
        }
        
        public int JoinGame(string hostPlayerID, string joiningPlayerID) {
            return base.Channel.JoinGame(hostPlayerID, joiningPlayerID);
        }
        
        public Client.ServiceRef.DTO_Player[] GetAllPlayers() {
            return base.Channel.GetAllPlayers();
        }
        
        public Client.ServiceRef.DTO_GamePlay[] GetAllGames() {
            return base.Channel.GetAllGames();
        }
        
        public Client.ServiceRef.DTO_GamePlay[] GetGamesByPlayerID(string playerID) {
            return base.Channel.GetGamesByPlayerID(playerID);
        }
        
        public Client.ServiceRef.DTO_Player[] GetPlayersByGameID(string gmID) {
            return base.Channel.GetPlayersByGameID(gmID);
        }
        
        public Client.ServiceRef.DTO_PLAYER_GAMES[] GetForEachPlayerNGames() {
            return base.Channel.GetForEachPlayerNGames();
        }
        
        public Client.ServiceRef.DTO_GamePlay[] GetAllGamesByAccountEmail(string accountEmail) {
            return base.Channel.GetAllGamesByAccountEmail(accountEmail);
        }
        
        public void RemovePlayers(int[] playersID) {
            base.Channel.RemovePlayers(playersID);
        }
        
        public void RemoveGames(int[] gamesID) {
            base.Channel.RemoveGames(gamesID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.ISoapService")]
    public interface ISoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/AddGameMovement", ReplyAction="http://tempuri.org/ISoapService/AddGameMovementResponse")]
        void AddGameMovement(int gameID, Client.ServiceRef.DTO_MOVEMENT movement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoapService/GetPreviewsGamesForRestore", ReplyAction="http://tempuri.org/ISoapService/GetPreviewsGamesForRestoreResponse")]
        Client.ServiceRef.DTO_GamePlay[] GetPreviewsGamesForRestore(string accountEmail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapServiceChannel : Client.ServiceRef.ISoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapServiceClient : System.ServiceModel.ClientBase<Client.ServiceRef.ISoapService>, Client.ServiceRef.ISoapService {
        
        public SoapServiceClient() {
        }
        
        public SoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddGameMovement(int gameID, Client.ServiceRef.DTO_MOVEMENT movement) {
            base.Channel.AddGameMovement(gameID, movement);
        }
        
        public Client.ServiceRef.DTO_GamePlay[] GetPreviewsGamesForRestore(string accountEmail) {
            return base.Channel.GetPreviewsGamesForRestore(accountEmail);
        }
    }
}
